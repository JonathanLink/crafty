name: Node CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Java
      uses: olafurpg/setup-scala@v5
    - name: yarn install
      run: yarn install
    - name: yarn test
      run: yarn test
      env:
        CI: true
        
  sonarcloud:
    runs-on: ubuntu-latest
    if: github.repository == 'swissquote/crafty' && github.event_name != 'pull_request'
    steps:
    - name: Install Java
      uses: olafurpg/setup-scala@v5
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  documentation:
    runs-on: ubuntu-latest
    if: github.repository == 'swissquote/crafty' && github.event_name != 'pull_request'
    steps:
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
    - name: Generate documentation
      run: vendor/bin/daux generate --themes=docs_theme
    - uses: maxheld83/ghpages@v0.2.1
      env:
        BUILD_DIR: "static"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
